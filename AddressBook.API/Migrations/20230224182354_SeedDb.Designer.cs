// <auto-generated />
using AddressBook.API.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AddressBook.API.Migrations
{
    [DbContext(typeof(AddressContext))]
    [Migration("20230224182354_SeedDb")]
    partial class SeedDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AddressBook.API.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Utrecht",
                            Country = "Nederland",
                            HouseNumber = "1000",
                            Street = "Orteliuslaan",
                            ZipCode = "3528 BD"
                        },
                        new
                        {
                            Id = 2,
                            City = "Amsterdam",
                            Country = "Nederland",
                            HouseNumber = "34",
                            Street = "Claude Debussylaan",
                            ZipCode = "1082 MD"
                        },
                        new
                        {
                            Id = 3,
                            City = "Amsterdam",
                            Country = "Nederland",
                            HouseNumber = "7",
                            Street = "Mr. Treublaan",
                            ZipCode = "1097 DP"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
